package com.claudia.rhclient.managedbean;

import com.claudia.rhclient.outils.ConvertJson;
import com.claudia.rhclient.properties.Url;
import com.claudia.rhclient.rest.Departement;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import java.io.Serializable;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.ManagedBean;
import javax.inject.Named;
import javax.enterprise.context.RequestScoped;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


@Named(value = "rechercheDepartement")
@ManagedBean
@RequestScoped
public class RechercheDepartement implements Serializable {

    
   
    private int  itemDepartement;
    private List<Departement> departementListe = new ArrayList<>() ;
    private Departement dep;

    
    
    
    
    public Departement getDep() {
        return dep;
    }

    public void setDep(Departement dep) {
        this.dep = dep;
    }
    
    public int getItemDepartement() {
        return itemDepartement;
    }

    public void setItemDepartement(int itemDepartement) {
        this.itemDepartement = itemDepartement;
    }
    
    
    public RechercheDepartement() { 
        this.dep = new Departement(); //il faut initialiser l'objet dep pour pouvoir l'utiliser dnas la page xhtml
    }
    
    //Generated by Map (liste des départements pour la liste déroulante )
    private  Map<String,Object> listeDepartement = new LinkedHashMap();
    public Map<String, Object> getListeDepartement() {             
        try {
            
            JSONArray liste  = ConvertJson.convert("com.claudia.rhrest.entity.departement");
            
            for(int i=0; i< liste.length() ; i++){              
                 JSONObject dep  = liste.getJSONObject(i);
                 departementListe.add(new Departement(dep.getString("nom"), dep.getString("description")));
                 listeDepartement.put(departementListe.get(i).getNom(), i );  //label , value                 
            }
         
        } catch (JSONException ex) {
            Logger.getLogger(RechercheDepartement.class.getName()).log(Level.SEVERE, null, ex);
        }             
        return listeDepartement;
    }
        
    
    


   //quand un département est séléctionné : afficher les infos 
    //pour cela on récupère sa valeur ( int itemDepartement)  
   public String descriptionDepartement(){
       return departementListe.get(itemDepartement).getDescription();
       
   }
    
    
    //Créer un nouveau département 
    public void createDepartment(){
     
        JSONObject obj = new JSONObject();    
        try {
       
            obj.put("nom",dep.getNom());
            obj.put("description", dep.getDescription());
            ConvertJson.envoieEnJSON("com.claudia.rhrest.entity.departement", obj);                
             
        } catch (JSONException ex) {
            Logger.getLogger(InscriptionBean.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    

   
    
    
}

